create table if not exists uploaded_document
(
    id                bigint generated by default as identity
        constraint uploaded_document_pkey
            primary key,
    uuid              UUID UNIQUE,
    time_added        timestamp,
    title             varchar,
    validation_passed boolean
);

CREATE INDEX IF NOT EXISTS document_uuid_index ON uploaded_document (uuid);

CREATE OR REPLACE FUNCTION notify_event() RETURNS TRIGGER AS
'
    DECLARE
        payload JSON;
    BEGIN
        payload = row_to_json(NEW);
        PERFORM pg_notify(''document_added_event'', payload::text);
        RETURN NULL;
    END;
'
    LANGUAGE plpgsql;

create table if not exists graph
(
    id                  bigint generated by default as identity
        constraint graph_pkey
            primary key,
    document_uuid       uuid,
    matches_benford_law boolean,
    ones_count          bigint,
    twos_count          bigint,
    threes_count        bigint,
    fours_count         bigint,
    fives_count         bigint,
    sixes_count         bigint,
    sevens_count        bigint,
    eights_count        bigint,
    nines_count         bigint,
    error_count         bigint
);

DROP TRIGGER IF EXISTS notify_document_added_event on uploaded_document;
CREATE TRIGGER notify_document_added_event
    AFTER INSERT OR UPDATE OR DELETE
    ON uploaded_document
    FOR EACH ROW
EXECUTE PROCEDURE notify_event();;


